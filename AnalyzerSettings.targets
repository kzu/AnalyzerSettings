<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <GeneratedAnalyzerSettingsFile Condition="'$(GeneratedAnalyzerSettingsFile)' == ''">$(IntermediateOutputPath)$(MSBuildProjectName).AnalyzerSettings.ini</GeneratedAnalyzerSettingsFile>
    <!-- Whether to include the properties set by 
         https://github.com/dotnet/sdk/blob/master/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.DefaultOutputPaths.targets 
         as analyzer settings by default -->
    <EnableDefaultOutputPathsAnalyzerSettings Condition="'$(EnableDefaultAnalyzerSettings)' == ''">true</EnableDefaultOutputPathsAnalyzerSettings>

    <!-- When writing the .ini file, take into consideration the different line endings depending on the OS -->
    <_NewLineSeparator Condition="'$(OS)' == 'Windows_NT'">%0d</_NewLineSeparator>
    <_NewLineSeparator>$(_NewLineSeparator)%0a</_NewLineSeparator>
  </PropertyGroup>

  <!-- Persists settings for the code fixers to know the intermediate output path or other values from the project.
       Unlike the other "private" targets that start with "_", this target is intended for public consumption in 
       BeforeTargets, so that dynamically calculated @(AutoCodeFixSetting) can be added before the save happens. 
       
       Note, however, that the incremental build will only consider $(MSBuildAllProjects) by default. If the custom 
       settings are calculated from other files that need to be added to the incremental runs of this target, append 
       them to the $(AdditionalAutoCodeFixSettingsInputs) property.
  -->
  <Target Name="GenerateAnalyzerSettings"
          BeforeTargets="CoreCompile"
          DependsOnTargets="PrepareForBuild;CoreGenerateAnalyzerSettings" />

  <Target Name="GetAnalyzerSettings">
    <ItemGroup Condition="'$(EnableDefaultOutputPathsAnalyzerSettings)' == 'true'">
        <AnalyzerSetting Include="BaseOutputPath" Value="$(BaseOutputPath)" />
        <AnalyzerSetting Include="OutputPath" Value="$(OutputPath)" />
        <AnalyzerSetting Include="BaseIntermediateOutputPath" Value="$(BaseIntermediateOutputPath)" />
        <AnalyzerSetting Include="IntermediateOutputPath" Value="$(IntermediateOutputPath)" />
        <AnalyzerSetting Include="PackageOutputPath" Value="$(PackageOutputPath)" />
    </ItemGroup>
  </Target>

  <Target Name="CreateGeneratedAnalyerSettingsInputsCacheFile"
          DependsOnTargets="GetAnalyzerSettings">
    <PropertyGroup>
      <GeneratedAnalyerSettingsInputsCacheFile>$(IntermediateOutputPath)$(MSBuildProjectName).AnalyzerSettingsInputs.cache</GeneratedAnalyerSettingsInputsCacheFile>
    </PropertyGroup>

    <Hash ItemsToHash="@(AnalyzerSetting -> '%(Identity)=%(Value)')">
      <Output TaskParameter="HashResult" PropertyName="_AnalyzerSettingsHash" />
    </Hash>

    <WriteLinesToFile Lines="$(_AnalyzerSettingsHash)" File="$(GeneratedAnalyerSettingsInputsCacheFile)" Overwrite="true" WriteOnlyWhenDifferent="true" />
    
    <ItemGroup>
      <FileWrites Include="$(GeneratedAnalyerSettingsInputsCacheFile)" />
    </ItemGroup>
  </Target>

  <Target Name="CoreGenerateAnalyzerSettings"
          DependsOnTargets="CreateGeneratedAnalyerSettingsInputsCacheFile"
          Inputs="$(GeneratedAnalyerSettingsInputsCacheFile)"
          Outputs="$(GeneratedAnalyzerSettingsFile)">
    <ItemGroup>
      <AdditionalFiles Remove="$(GeneratedAnalyzerSettingsFile)" />
      <!-- We guarantee uniqueness so that the parsing can be converted straight into a Dictionary<string, string> --> 
      <DistinctAnalyzerSettings Include="@(AnalyzerSetting -> Distinct())" />
    </ItemGroup>

    <WriteLinesToFile File="$(GeneratedAnalyzerSettingsFile)" Overwrite="true" 
                      Lines="@(DistinctAnalyzerSettings -> '%(Identity)=%(Value)', '$(_NewLineSeparator)')" />

    <ItemGroup>
      <FileWrites Include="$(GeneratedAnalyzerSettingsFile)" />
      <AdditionalFiles Include="$(GeneratedAnalyzerSettingsFile)" />
    </ItemGroup>
  </Target>

</Project>